{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = \"\";\n\nconst input = document.querySelector(\"#datetime-picker\");\nconst showDays = document.querySelector(\"[data-days]\");\nconst showHours = document.querySelector(\"[data-hours]\");\nconst showMinutes = document.querySelector(\"[data-minutes]\");\nconst showSeconds = document.querySelector(\"[data-seconds]\");\nconst btn = document.querySelector(\"button\");\nbtn.disabled = true;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        if (selectedDates[0] < new Date()) {\n            btn.disabled = true;\n            return iziToast.error({\n                position: 'topRight',\n                title: 'Error',\n                message: 'Please choose a date in the future',\n            });\n        } else btn.disabled = false;    \n    },\n};\n\nconst fp = flatpickr(\"#datetime-picker\", options);\n\n\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    showDays.textContent = addLeadingZero(days);\n    showHours.textContent = addLeadingZero(hours);\n    showMinutes.textContent = addLeadingZero(minutes);\n    showSeconds.textContent = addLeadingZero(seconds);\n    return { days, hours, minutes, seconds };\n};\n\nfunction addLeadingZero(value) {\n    return value.toString().padStart(2, \"0\");\n}\n\nbtn.addEventListener(\"click\", () => {\n    btn.disabled = true;\n    input.disabled = true;\n    const intervalId = setInterval(() => {\n        if ((userSelectedDate - new Date()) <= 0) {\n            clearInterval(intervalId);\n            btn.disabled = false;\n            input.disabled = false;\n            return;\n        };\n        convertMs(userSelectedDate - new Date());\n    }, 1000);\n});\n\n\n\n\n"],"names":["userSelectedDate","input","showDays","showHours","showMinutes","showSeconds","btn","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","intervalId"],"mappings":"0IAMA,IAAIA,EAAmB,GAEvB,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAM,SAAS,cAAc,QAAQ,EAC3CA,EAAI,SAAW,GAEf,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAEnB,GADAR,EAAmBQ,EAAc,CAAC,EAC9BA,EAAc,CAAC,EAAI,IAAI,KACvB,OAAAF,EAAI,SAAW,GACRG,EAAS,MAAM,CAClB,SAAU,WACV,MAAO,QACP,QAAS,oCACzB,CAAa,EACEH,EAAI,SAAW,EACzB,CACL,EAEWI,EAAU,mBAAoBH,CAAO,EAIhD,SAASI,EAAUC,EAAI,CAOnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,OAAAV,EAAS,YAAce,EAAeJ,CAAI,EAC1CV,EAAU,YAAcc,EAAeH,CAAK,EAC5CV,EAAY,YAAca,EAAeF,CAAO,EAChDV,EAAY,YAAcY,EAAeD,CAAO,EACzC,CAAE,KAAAH,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CAC3C,CAEAZ,EAAI,iBAAiB,QAAS,IAAM,CAChCA,EAAI,SAAW,GACfL,EAAM,SAAW,GACjB,MAAMkB,EAAa,YAAY,IAAM,CACjC,GAAKnB,EAAmB,IAAI,MAAW,EAAG,CACtC,cAAcmB,CAAU,EACxBb,EAAI,SAAW,GACfL,EAAM,SAAW,GACjB,MAEZ,CAAQU,EAAUX,EAAmB,IAAI,IAAM,CAC1C,EAAE,GAAI,CACX,CAAC"}