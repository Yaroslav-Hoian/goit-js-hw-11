{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\nexport function getImagesByQuery(query) {\n    return axios.get(\"https://pixabay.com/api/\", {\n        params: {\n            key: \"51210907-49260f6ab8f7fee8b1bad09dd\",\n            q: query,\n            image_type: \"photo\",\n            orientation: \"horizontal\",\n            safesearch: true\n        }\n    })\n        .then(response => {\n            return response.data.hits\n        });\n}","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst list = document.querySelector(\".gallery\");\nconst loaderBox = document.querySelector(\".loader-box\")\n\nconst lightbox = new SimpleLightbox('.gallery-item a', {\n    captionsData: \"alt\",\n    captionDelay: 250\n})\n\nexport function createGallery(images) {\n    const markup = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n    <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n            <img\n                class=\"gallery-image\"\n                src=\"${webformatURL}\"\n                alt=\"${tags}\"\n            />\n        </a>\n        <ul class=\"list-box\">\n            <li class=\"item-description\">\n                <h3 class=\"subtitle\">Likes</h3>\n                <p class=\"subtext\">${likes}</p>\n            </li>\n            <li class=\"item-description\">\n                <h3 class=\"subtitle\">Views</h3>\n                <p class=\"subtext\">${views}</p>\n            </li>\n            <li class=\"item-description\">\n                <h3 class=\"subtitle\">Comments</h3>\n                <p class=\"subtext\">${comments}</p>\n            </li>\n            <li class=\"item-description\">\n                <h3 class=\"subtitle\">Downloads</h3>\n                <p class=\"subtext\">${downloads}</p>\n            </li>\n        </ul>\n    </li>\n`)\n        .join('');\n\n    list.insertAdjacentHTML(\"beforeend\", markup);\n\n    lightbox.refresh();\n}\n\nexport function clearGallery() {\n    list.innerHTML = '';\n}\n\nexport function showLoader() {\n    const loader = document.querySelector(\".loader\");\n    if (!loader) {\n        loaderBox.insertAdjacentHTML (\"beforeend\", '<span class=\"loader\"></span>')\n    }\n}\n\nexport function hideLoader() {\n    const loader = document.querySelector(\".loader\");\n    if (loader) {\n        loader.remove()\n    }\n}","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport { getImagesByQuery } from \"./js/pixabay-api\";\nimport { createGallery } from \"./js/render-functions\";\nimport { clearGallery } from \"./js/render-functions\";\nimport { showLoader } from \"./js/render-functions\";\nimport { hideLoader } from \"./js/render-functions\";\n\nconst form = document.querySelector(\".form\");\nconst input = form.querySelector(\"input[name='search-text']\")\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(ev) {\n    ev.preventDefault();\n    clearGallery();\n\n    const query = input.value.trim();\n    if (query === \"\") {\n        iziToast.error({\n            title: `Please write word`,\n            position: \"topRight\"\n        });\n        return form.reset();\n    }\n\n    showLoader()\n\n    getImagesByQuery(query)\n        .then(images => {\n            setTimeout(() => {\n                hideLoader();\n\n                if (images.length === 0) {\n                    iziToast.error({\n                        title: `Sorry, there are no images matching your search ${query}. Please try again!`,\n                        position: \"topRight\"\n                    });\n                } else {\n                    createGallery(images);\n                };\n            }, 1500);\n        })\n\n        .catch(error => {\n            setTimeout(() => {\n                hideLoader();\n\n                iziToast.error({\n                    title: error.message,\n                });\n            }, 1500);\n        })\n    \n    form.reset();\n}"],"names":["getImagesByQuery","query","axios","response","list","loaderBox","lightbox","SimpleLightbox","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","loader","form","input","handleSubmit","ev","iziToast","error"],"mappings":"owBAEO,SAASA,EAAiBC,EAAO,CACpC,OAAOC,EAAM,IAAI,2BAA4B,CACzC,OAAQ,CACJ,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACf,CACT,CAAK,EACI,KAAKE,GACKA,EAAS,KAAK,IACxB,CACT,CCZA,MAAMC,EAAO,SAAS,cAAc,UAAU,EACxCC,EAAY,SAAS,cAAc,aAAa,EAEhDC,EAAW,IAAIC,EAAe,kBAAmB,CACnD,aAAc,MACd,aAAc,GAClB,CAAC,EAEM,SAASC,EAAcC,EAAQ,CAClC,MAAMC,EAASD,EAAO,IAAI,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IAAK;AAAA;AAAA,wCAEpEL,CAAa;AAAA;AAAA;AAAA,uBAG9BD,CAAY;AAAA,uBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAMUC,CAAK;AAAA;AAAA;AAAA;AAAA,qCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,qCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,qCAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,CAI7C,EACQ,KAAK,EAAE,EAEZb,EAAK,mBAAmB,YAAaM,CAAM,EAE3CJ,EAAS,QAAO,CACpB,CAEO,SAASY,GAAe,CAC3Bd,EAAK,UAAY,EACrB,CAEO,SAASe,GAAa,CACV,SAAS,cAAc,SAAS,GAE3Cd,EAAU,mBAAoB,YAAa,8BAA8B,CAEjF,CAEO,SAASe,GAAa,CACzB,MAAMC,EAAS,SAAS,cAAc,SAAS,EAC3CA,GACAA,EAAO,OAAQ,CAEvB,CCvDA,MAAMC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQD,EAAK,cAAc,2BAA2B,EAE5DA,EAAK,iBAAiB,SAAUE,CAAY,EAE5C,SAASA,EAAaC,EAAI,CACtBA,EAAG,eAAc,EACjBP,IAEA,MAAMjB,EAAQsB,EAAM,MAAM,KAAI,EAC9B,GAAItB,IAAU,GACV,OAAAyB,EAAS,MAAM,CACX,MAAO,oBACP,SAAU,UACtB,CAAS,EACMJ,EAAK,QAGhBH,EAAY,EAEZnB,EAAiBC,CAAK,EACjB,KAAKQ,GAAU,CACZ,WAAW,IAAM,CACbW,IAEIX,EAAO,SAAW,EAClBiB,EAAS,MAAM,CACX,MAAO,mDAAmDzB,CAAK,sBAC/D,SAAU,UAClC,CAAqB,EAEDO,EAAcC,CAAM,CAE3B,EAAE,IAAI,CACnB,CAAS,EAEA,MAAMkB,GAAS,CACZ,WAAW,IAAM,CACbP,IAEAM,EAAS,MAAM,CACX,MAAOC,EAAM,OACjC,CAAiB,CACJ,EAAE,IAAI,CACnB,CAAS,EAELL,EAAK,MAAK,CACd"}